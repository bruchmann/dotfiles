#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#     ____   _             __ _
#    / __ ) (_)____   ____/ /(_)____   ____ _ _____
#   / __  |/ // __ \ / __  // // __ \ / __ `// ___/
#  / /_/ // // / / // /_/ // // / / // /_/ /(__  )
# /_____//_//_/ /_/ \__,_//_//_/ /_/ \__, //____/
#                                   /____/

# remove all existing keybindings
hc keyunbind --all

# Use Super as primary mod-key, Meta as secondary mod-key
Mod=Mod4
Mod2=Mod1

hc keybind $Mod-q close_and_remove
hc keybind $Mod-Shift-r reload
hc keybind $Mod-space spawn rofi -no-config -no-lazy-grab -show combi -modi combi,drun,ssh -combi-modi window,drun,ssh -theme ~/.config/polybar/hack/scripts/rofi/launcher.rasi
hc keybind $Mod-Return spawn gnome-terminal
hc keybind $Mod-Shift-Return spawn gnome-terminal -e nvim
hc keybind $Mod2-Return spawn epiphany
hc keybind $Mod2-Shift-Return chain , split right 0.5 , focus right , spawn epiphany "https://news.ycombinator.com/"
hc keybind Print spawn flameshot gui

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction and focus it
hc keybind $Mod-$Mod2-h chain , split left 0.5 , focus left
hc keybind $Mod-$Mod2-j chain , split bottom 0.5 , focus bottom
hc keybind $Mod-$Mod2-k chain , split top 0.5 , focus top
hc keybind $Mod-$Mod2-l chain , split right 0.5 , focus right

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
# restore all minimized windows of the focused tag
hc keybind $Mod-Ctrl-m foreach CLIENT clients. \
	sprintf MINATT "%c.minimized" CLIENT \
	sprintf TAGATT "%c.tag" CLIENT and \
	, compare MINATT "=" "true" \
	, substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
	, set_attr MINATT false
	hc keybind $Mod-p pseudotile toggle
	# The following cycles through the available layouts within a frame, but skips
	# layouts, if the layout change wouldn't affect the actual window positions.
	# I.e. if there are two windows within a frame, the grid layout is skipped.
	hc keybind $Mod-$Mod2-Return                                                    \
		or , and . compare tags.focus.curframe_wcount = 2                   \
		. cycle_layout +1 vertical horizontal max vertical grid    \
		, cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#   ______
#  /_  __/____ _ ____ _ _____
#   / /  / __ `// __ `// ___/
#  / /  / /_/ // /_/ /(__  )
# /_/   \__,_/ \__, //____/
#             /____/

tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

#   ________
#  /_  __/ /_  ___  ____ ___  ___
#   / / / __ \/ _ \/ __ `__ \/ _ \
#  / / / / / /  __/ / / / / /  __/
# /_/ /_/ /_/\___/_/ /_/ /_/\___/

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#5E81AC'
hc set frame_border_normal_color '#3B4252'
hc set frame_bg_normal_color '#2E3440'
hc set frame_bg_active_color '#5E81AC'
hc set frame_border_width 2
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 2
hc set frame_gap 2

hc attr theme.title_height 0
hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 0  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#5E81AC'
hc attr theme.normal.color '#3B4252'
hc attr theme.urgent.color '#BF616A'
hc attr theme.inner_width 1
hc attr theme.inner_color '#434C5E'
hc attr theme.border_width 1
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color '#2E3440'
hc attr theme.active.inner_color '#3B4252'
hc attr theme.active.outer_color '#434C5E'
hc attr theme.background_color '#2E3440'

hc set window_gap 4
hc set frame_padding 2
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

#     ____        __
#    / __ \__  __/ /__  _____
#   / /_/ / / / / / _ \/ ___/
#  / _, _/ /_/ / /  __(__  )
# /_/ |_|\__,_/_/\___/____/

hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=Piper floating=on
hc rule class=vlc tag=9

# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

hc set_monitors 1920x1028+0+26

bash ~/dotfiles/polybar/launch.sh &

killall -9 kdeconnect-indicator
kdeconnect-indicator &

killall -9 flameshot
flameshot &
